name: TEST AND BUILD

on:
  push:
    branches:
      - master
  
jobs:
  testandbuild:

    runs-on: ubuntu-latest
    ### IF NEED TO RUN ALL ON SAME CONTAINER SERVICES WILL BE REACHABLE BY DNS OF ITS SERVICE NAME eg: sambaalpine, aplpine, busybox, etc...
    ### IF NOT DEFINED WILL BE REACHABLE BY  localhost:PORT
    container: mcr.microsoft.com/dotnet/core/sdk:2.2
    
    services:      
          
      sambaalpine:
        image: "stevepacker/samba-alpine"
        ports:
          - "8135:135"
          - "8137:137/udp"
          - "8138:138/udp"
          - "8139:139"
          - "8445:445"
        volumes:
          - shareddata:/shared
          - ~/:/public
        env:
          DIRECTORIES: shared,public
          WORKGROUP: WORKGROUP
          SAMBA_NAME: sambaalpine        
  
    steps:
    
      #NEEED TO CHECKOUT ALL REPO ON CONTAINER TO  DO ANYTHNG WITH ITS FILES EG AS CASE BELOW LAUCHING DOCKER COMPOSE
      - name: Checkout Repo to local runner        
        uses: actions/checkout@v2        
      
      ### Eg: LAUNCH DOCKER COMPOSE -> BEWARE NETWORK {BRISGE MODE} WILL BE THE ONE DEFINED IN THE docker compose file and runner may not reach containers
      # - name: Run composer to add containers for functional Tests
        # run: docker-compose -f docker-compose.yml -p sambaalpine up -d --build 
       
      ### WITHOUT DOCKER COMPOSE THIS CONTAINERS WILL NOT HAVE SAME NAME  
      
      # - name: Check Running Containers
        # run: docker ps -a
        
      - name: Export github.workspace to PROJECT_PATH      
        run: echo ::set-env name=PROJECT_PATH::$GITHUB_WORKSPACE   

      - name: echo GitHub Workspace Directly       
        run:  echo ${{github.workspace}}        
        
      - name: echo GitHub Workspace From PROJECT_PATH    
        run:  echo ${{env.PROJECT_PATH}}
        
      # - name: Check logs of docker
        # run: docker logs sambaalpine
        
      # - name: Check exec ip of docker
        # run: docker exec sambaalpine ifconfig
        
      # - name: Check ping from busybox to sambaalpine
        # run: docker exec busybox ping sambaalpine -w3
        
      # - name: Check exec ls shared of docker
        # run: docker exec sambaalpine ls /shared
                
      # - name: List networks
        # run:docker network ls
        
      # - name: Allow Ip Fowarding on host
        # run: sudo sysctl net.ipv4.conf.all.forwarding=1
        
      # - name: Change iptabtles policy on host
        # run: sudo iptables -P FORWARD ACCEPT
        
      - name: Check access to sambaalpine
        run: ping -4 -w3 sambaalpine
                      
      - name: Test
        run: dotnet test 
            
      ### NEXT STEPS ARE DONE ALREADY ON packnuget.yml with automated actions dispatched
      # - name: Build
        # run: dotnet build --configuration Release ${{env.PROJECT_PATH}}/src/AspNetCore.HealthChecks.SmbCifs.csproj
      
      # - name: Pack (Create Nuget)
        # run: dotnet pack --no-build -c Release ${{env.PROJECT_PATH}}/src/AspNetCore.HealthChecks.SmbCifs.csproj -o .
             
      # - name: Push to NuGet
        # run: dotnet nuget push ${{env.PROJECT_PATH}}/src/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://nuget.org
        
                
          
      - name: Create issue using REST API
        run: |
        curl --request POST \
        --url https://api.github.com/repos/${{ github.repository }}/dispatches \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "event_type": "testandbuildcomplete",
          "client_payload": {
            "unit": false,
            "integration": true 
            } 
          }'
