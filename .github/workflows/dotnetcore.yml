name: .NET Core

on: [push]

jobs:
  testallandbuild:

    runs-on: ubuntu-latest
    ### IF NEED TO RUN ALL ON SAME CONTAINER SERVICES WILL BE REACHABLE BY DNS OF ITS SERVICE NAME eg: sambaalpine, aplpine, busybox, etc...
    ### IF NOT DEFINED WILL BE REACHABLE BY  localhost:PORT
    container: mcr.microsoft.com/dotnet/core/sdk:2.2
    
    services:      
          
      sambaalpine:
        image: "stevepacker/samba-alpine"
        ports:
          - "8135:135"
          - "8137:137"
          - "8138:138"
          - "8139:139"
          - "8445:445"
        volumes:
          - shareddata:/shared
          - ~/:/public
        env:
          DIRECTORIES: shared,public
          WORKGROUP: WORKGROUP
          SAMBA_NAME: sambaalpine        
  
    steps:
    
      #NEEED TO CHECKOUT ALL REPO ON CONTAINER TO  DO ANYTHNG WITH ITS FILES EG AS CASE BELOW LAUCHING DOCKER COMPOSE
      - name: Checkout Repo to local runner
        uses: actions/checkout@v2
      
      ### Eg: LAUNCH DOCKER COMPOSE BEWARE NETWORK WILL BE THE ONE DEFINED IN THE docker compose file and nex container may not reach it
      #- name: Run composer to add containers for functional Tests
        #run: docker-compose -f docker-compose.yml -p sambaalpine up -d --build 
       
      ### WITHOUT DOCKER COMPOSE THIS CONTAINERS WILL NOT HAVE SAME NAME        
      # - name: Check Running Containers
        # run: docker ps -a
        
      - name: echo GitHub Workspace
        run:  echo $GITHUB_WORKSPACE
        
      # - name: Check logs of docker
        # run: docker logs sambaalpine
      # - name: Check exec ip of docker
        # run: docker exec sambaalpine ifconfig
      # - name: Check ping from busybox to sambaalpine
        # run: docker exec busybox ping sambaalpine -w3
      # - name: Check exec ls shared of docker
        # run: docker exec sambaalpine ls /shared

    ###THIS IS ONLY TO ADD TO PATH AND HAVE NUGGET REPO READY FOR DOT.NET VERSION SPECIFIED WITH uses: x.x.xxx
      # - name: Setup .NET Core
        # uses: actions/setup-dotnet@v1
        # with:
          # dotnet-version: 2.2.108
     
      # - name: Check access to alpinesamba
        # run: ping -4 -w3 sambaalpine
        
      - name: Test
        run: dotnet test

      - name: Build
        run: dotnet build --configuration Release
              
      - name: Publish NuGet
        uses: rohith/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: ${{$SGITHUB_WORKSPACE}}/src/AspNetCore.HealthChecks.SmbCifs.csproj # Relative to repository root
          VERSION_FILE_PATH: build/dependencies.props # Filepath with version info, relative to repository root. Defaults to project file
        # VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
        # TAG_COMMIT: true # Flag to enable / disalge git tagging
        # TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
        # NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key      
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          
      - name: Push to NuGet
        run: dotnet nuget push $GITHUB_WORKSPACE/src/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://nuget.org
