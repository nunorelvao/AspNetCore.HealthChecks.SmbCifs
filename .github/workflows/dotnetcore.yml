name: .NET Core

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:

      alpine:
        image: "alpine:3.6"  
        #ports:
        #  - "135:135"      
        env:
          VAR1: var1          
      busybox:
        image: "busybox"
        volumes:
          - /data
        #ports:
        #  - "135:135"      
        env:
          VAR1: var1
      sambaalpine:
        image: "stevepacker/samba-alpine"
        ports:
          - "135:135"
          - "137:137"
          - "138:138"
          - "139:139"
          - "4445:445"
        volumes:
          - shareddata:/shared
          - ~/:/public
        env:
          DIRECTORIES: shared,public
          WORKGROUP: WORKGROUP
          SAMBA_NAME: sambaalpine

    steps:
      - uses: actions/checkout@v2
      
      #- name: Run composer to add containers for functional Tests
        #run: docker-compose -f docker-compose.yml -p sambaalpine up -d --build 
        
      - name: Check Running Containers
        run: docker ps -a
        
      - name: Check logs of docker
        run: docker logs sambaalpine
      - name: Check exec ip of docker
        run: docker exec sambaalpine ifconfig
      - name: Check ping from busybox to sambaalpine
        run: docker exec busybox ping sambaalpine -w5
      - name: Check exec ls shared of docker
        run: docker exec sambaalpine ls /shared
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.2.108
     
      - name: Check acess to alpinesamba
        run: ping sambaalpine
        
      - name: Test
        run: dotnet test

      - name: Build
        run: dotnet build --configuration Release
      
      - name: Publish NuGet
        uses: rohith/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: src/AspNetCore.HealthChecks.SmbCifs.csproj # Relative to repository root
          VERSION_FILE_PATH: build/dependencies.props # Filepath with version info, relative to repository root. Defaults to project file
        # VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
        # TAG_COMMIT: true # Flag to enable / disalge git tagging
        # TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
        # NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key      
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          
      - name: Push to NuGet
        run: dotnet nuget push src/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://nuget.org
